Скриптуем GP Preferences / script GP Preferences Доброго времени суток. Начну с небольшого описания, что же такое GP Preferences и закончу примером скриптинга автоматического добавления сетевых дисков пользователям. GP Preferences - со времен появления доменов NT утекло "много времени" но Админам так и приходилось реализовывать свои порывы к тотальной автоматизации через скриптинг Logon or logoff. С появлением доменов 2008 всё стало интереснее и красивее, нам добавили Preferences в групповые политики. Чтож, думаю далеко не все сразу ломанулись юзать эту фитчу.. а зря. Почему? Ну хотя бы потому что пользователь получает не здоровенный скрипт с выборкой и сортировкой а XML ки с настройками, которые применяются не злоупотребляя временем. Интерфейс! ДА-да! Теперь все понятно, все "наглядно" и всё как по домашнему... ... Перехожу к тому зачем создавал все же этот пост, как же будем скриптовать эту фичуру что бы у нас всё стало всё вертеться на автопилоте и мы не задумывались о том что надо куда то лесть и добавлять диск, как в скрипт так и в Preferences. Данный пример на PowerShell так как на новую кухню лучше побывать новой ложкой Нам понадобиться фитча MS GP manager и PowerShell (желательно 2), всё это дело Одминам не сложно раздобыть и поставить ;) Заряжаем new_gp_cmdlet.ps1 #Подключаем себе модуль групповой политики Import-Module -Name grouppolicy #Переменные, куда же без них! # тута у нас будет доменный контролер, пишите ближайший с доступом $DC = "DC_CON" # тута ПОЛНОЕ имя домена $AD_Name = "DOM" # А тут имя групповой политики в которой надо добавить сетевой диск $Name_GP = "NGPO" # не хитрым способом получаем ID групповой политики, так как хранятся они именно под IDшниками :( $ID = Get-GPO -Name $Name_GP | foreach {$_.id} $ID = $ID -replace "Guid","" #Наводим мосты #Мостик на сетевые диски $DRIVES_F = "$DCSYSVOL$AD_NamePolicies{$ID}UserPreferencesDrivesDrives.xml" #Мостик на версию политики, не ЗАБЫВАЕМ ПРО РЕПЛИКАЦИЮ! $GP_Ver = "$DCSYSVOL$AD_NamePolicies{$ID}gpt.ini" #мало ли, новая политика и нет у нас ещё таких папочки "Drives" mkdir "$DCSYSVOL$AD_NamePolicies{$ID}UserPreferencesDrives" # начинаем танци с бубном,Берём всё содержимое политики и начинаем измываться $S = Get-Content -path $DRIVES_F #Это не обязательная процедура нормализации, специалисты МС считают, что xml может хранится как попало лишь #бы теги были.. нам нужно сделать все красиво построчно $S = $S -replace "><Drive",">!1! <Drive" -split "!1!" # заряжаем в переменную все теги с сетевыми дискам $T = $S | Where-Object {$_ -like "*<Drive clsid*"} # заряжаем в переменную главный тег, информирующий о том что это и есть сетевые диски $G = $S | Where-Object {$_ -like "<Drives clsid*"} # финальная процедура # заголовок XML Set-Content -Path $DRIVES_F -Value '<?xml version="1.0" encoding="utf-8"?>' # вдруг групповая политика новая {DS_ID} можете подсмотреть в другой политике If ($G -eq $NULL) {Add-Content -Path $DRIVES_F -Value '<Drives clsid="{DS_ID}">'} Add-Content -Path $DRIVES_F -Value $G Add-Content -Path $DRIVES_F -Value $T Add-Content -Path $DRIVES_F -Value ' <Drive clsid="{D_ID}" name="NGPS" status="NLIT:" image="1" changed="2010-09-07 02:20:48" uid="{0554EDB9-712E-4038-B56E-325777B13AF5}" bypassErrors="1"><Properties action="R" thisDrive="NOCHANGE" allDrives="NOCHANGE" userName="" path="PSH" label="" persistent="0" useLetter="1" letter="NLIT"/><Filters><FilterGroup bool="AND" not="0" name="NGR" userContext="1" primaryGroup="0" localGroup="0"/></Filters></Drive>' # закрываем Add-Content -Path $DRIVES_F -Value '</Drives>' # увеличиваем версию на 30 для репликации [STRING]$VER = Get-Content -path $GP_Ver | Where-Object {$_ -match "Version"} $VER = $VER -replace "Version=","" [INT]$VER = [INT]$VER + 30 Set-Content -Path $GP_Ver -Value "[General]" Add-Content -Path $GP_Ver -Value "Version=$VER" Все! диск добавлен